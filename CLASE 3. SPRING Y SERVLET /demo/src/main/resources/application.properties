server.port=8090 
# en la u el puero 8080 esta bloqueado

# maven project, 3.2.2, java 17, .jar
#librerias = devtools, web


#pom.xml = dependencias, librerias adicionales con maven, Bootstrap
#imagenes, html, componentes estaticos = carpeta resources
#java = recibir y responder peticiones
# localhost:8090 para acceder a el
#applcication.properties = caracteristicas del aplicativo


#springboot = un framework para construir aplicaciones web que 
    #se maneja desde anotaciones (forma de introducir codigo cuando se esta complicando o ejecutando el programa)
    #tanto back como front

# @servletComponentScan = al ejecutar el proyecto buscar todas las clases que tengan la anotacion web servlet e inicializarlas en el DemoApplication.java 
# servlet = objeto en java, recibe y responde peticiones HTTP del navegador
    #asocieados a una url @WebServlet("/hola")
    # se les "inyecta" el codiog en la anotacion qur hace falta y crea un objeto java que puede responder solicitudes
# protected void service(HttpServletRequest request, HttpServletResponse response)
    # so sorbeescribe el metodo service para dividir la solicitud en request y response, por eso el @Override

#codigo HTTP 308: redireccionar, 200: ok


    #IMPORTS:
# import org.slf4j.Logger;
# import org.slf4j.LoggerFactory;
# import org.springframework.http.HttpHeaders;

# import jakarta.servlet.annotation.WebServlet;
# import jakarta.servlet.http.HttpServlet;
# import jakarta.servlet.http.HttpServletRequest;
# import jakarta.servlet.http.HttpServletResponse;


#el navegador tiene una peque√±a base de datos donde se pueden guardar cosas como cookies
